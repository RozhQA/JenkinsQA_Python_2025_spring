name: Run the tests on pull requests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-pytest:
    name: 'run pytest tests'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      JENKINS_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      JENKINS_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      JENKINS_HOST: localhost
      JENKINS_PORT: 8080
      BROWSER_NAME: chrome
      BROWSER_OPTIONS_CHROME: --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080

    steps:
      - name: git clone
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install the code linting and formatting tool Ruff
        run: pip install ruff

      - name: Lint code with Ruff
        run: ruff check --output-format=github --target-version=py312

      - name: prepare jenkins data
        run: |
          cat ${{ github.workspace }}/jenkins_data/jenkins_backup0* > ${{ github.workspace }}/jenkins_backup.tar
          md5sum ${{ github.workspace }}/jenkins_backup.tar

      - name: extract jenkins data and set permission
        run: |
          tar -xvf ./jenkins_backup.tar
          chmod -R 777 ./jenkins_backup/var/jenkins_home
          chmod -R 777 ./.github/

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker start
        run: docker run --rm --detach -p 8080:8080 -v ${{ github.workspace }}/jenkins_backup/var/jenkins_home:/var/jenkins_home jenkins/jenkins:2.492.2-lts-jdk17

      - name: Wait for the Jenkins
        run: ./.github/wait-for-jenkins.sh

      - name: Run tests from tests/api/tests_ui only
        run: pytest tests/api/tests_ui --alluredir=build/allure-results

      - name: Get Allure history
        uses: actions/checkout@v4.2.2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate allure report
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        with:
          allure_results: build/allure-results
          gh_pages: gh-pages
          allure_history: allure-history
          keep_reports: 30

      - name: Commit allure_report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: screenshots
          path: screenshots